In this week's unit, I learned about the Publisher-Subscriber pattern and the Command pattern as one design pattern. To be honest, this was an area that I had never studied systematically before, so I spent a lot of time learning about it. I will explain my understanding of the matters that were of particular interest to me.
The Publisher-Subscriber pattern is a method of indirect communication through messaging. I felt that the method of implementing software communication through messaging is an evolution of the Publisher-Subscriber pattern, as are microservice architectures using containers, etc., and communication through webAPI. In addition, I was able to learn about very practical issues such as "what kind of responsibility to assign to the Publisher" and "what kind of class to implement as a Subscriber that waits for events" as a policy for adopting and implementing the Publisher-Subscriber method. As I worked on the problems in Discussion, I will continue to work on the exercises in the textbook in preparation for the final test.
As this class will end next week, I would like to review what I have learned in the units up to this week to further consolidate what I have learned in this class.
