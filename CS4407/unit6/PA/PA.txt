
# PA

## Part 1: Write the pattern file

### a. Input file
The 7-segment display represents numbers and characters by lighting (1) or not lighting (0) each segment. The input patterns are shown below:

```file
0: 1 1 1 1 1 1 0
1: 0 1 1 0 0 0 0
2: 1 1 0 1 1 0 1
3: 1 1 1 1 0 0 1
4: 0 1 1 0 0 1 1
5: 1 0 1 1 0 1 1
6: 1 0 1 1 1 1 1
7: 1 1 1 0 0 0 0
8: 1 1 1 1 1 1 1
9: 1 1 1 1 0 1 1
A: 1 1 1 0 1 1 1
b: 0 0 1 1 1 1 1
C: 1 0 0 1 1 1 0
d: 0 1 1 1 1 0 1
E: 1 0 0 1 1 1 1
F: 1 0 0 0 1 1 1
```

### b. Output file
The output is converted into a binary format based on ASCII codes. The output values are as follows:

```file
0 (48): 0 1 1 0 0 0 0
1 (49): 0 1 1 0 0 0 1
2 (50): 0 1 1 0 0 1 0
3 (51): 0 1 1 0 0 1 1
4 (52): 0 1 1 0 1 0 0
5 (53): 0 1 1 0 1 0 1
6 (54): 0 1 1 0 1 1 0
7 (55): 0 1 1 0 1 1 1
8 (56): 0 1 1 1 0 0 0
9 (57): 0 1 1 1 0 0 1
A (65): 1 0 0 0 0 0 1
B (66): 1 0 0 0 0 1 0
C (67): 1 0 0 0 0 1 1
D (68): 1 0 0 0 1 0 0
E (69): 1 0 0 0 1 0 1
F (70): 1 0 0 0 1 1 0
H (72): 1 0 0 1 0 0 0
```

### c. Pattern file
Based on the above information, a text file for training was created. The content is as follows:

```file
Number of patterns = 17
Number of inputs = 7
Number of outputs = 7
[patterns]
1 1 1 1 1 1 0    0 1 1 0 0 0 0
0 1 1 0 0 0 0    0 1 1 0 0 0 1
1 1 0 1 1 0 1    0 1 1 0 0 1 0
1 1 1 1 0 0 1    0 1 1 0 0 1 1
0 1 1 0 0 1 1    0 1 1 0 1 0 0
1 0 1 1 0 1 1    0 1 1 0 1 0 1
1 0 1 1 1 1 1    0 1 1 0 1 1 0
1 1 1 0 0 0 0    0 1 1 0 1 1 1
1 1 1 1 1 1 1    0 1 1 1 0 0 0
1 1 1 1 0 1 1    0 1 1 1 0 0 1
1 1 1 0 1 1 1    1 0 0 0 0 0 1
0 0 1 1 1 1 1    1 0 0 0 0 1 0
1 0 0 1 1 1 0    1 0 0 0 0 1 1
0 1 1 1 1 0 1    1 0 0 0 1 0 0
1 0 0 1 1 1 1    1 0 0 0 1 0 1
1 0 0 0 1 1 1    1 0 0 0 1 1 0
1 0 0 1 0 0 0    1 0 0 1 0 0 0
```

## Part 2: Analysis results

The created `pat` file was used for analysis. The results of parameter adjustments for optimization are explained below.

- Network Configuration
The input and output units are fixed at 7. After analyzing the training results, a Layer 1 unit size of 10 was deemed optimal. The network configuration is shown below.

![Figure1](./image/Network%20Configuration.png)
Figure 1: Network Configuration

- Control Panel Settings
The main parameters adjusted in the control panel were:
1. Learning rate: Changed from the default 0.3 to 0.2.
2. Momentum: The default value of 0.8 was retained.

![Figure2](./image/parameter.png)
Figure 2: Parameter Settings

Below is an example of an Error Progress graph for an inappropriate configuration.

![Figure3](./image/Bad%20pattern.png)
Figure 3: Bad Pattern

### Results
At 5000 iterations, the error rate was 0.127, and at 25000 iterations, it ultimately reached 0.04364.

![Figure4](./image/5000.png)
Figure 4: Error Progress after 5000 iterations

![Figure5](./image/25000.png)
Figure 5: Error Progress after 25000 iterations

### Average Error Rate and Results
The average error rates for each pattern are as follows:

```file
Pattern: " 1, 1, 1, 1, 1, 1, 0   >>>   0, 1, 1, 0, 0, 0, 0 "
Result: " 0.02, 0.98, 0.98, 0.04, 0, 0.03, 0.02 "
...
```

### Optimization Example
By setting the Learning rate to 0.4 and Momentum to 0.9, an error rate of 0.026299 was achieved.

![Figure6](./image/optional.png)
Figure 6: Optimized Parameters
