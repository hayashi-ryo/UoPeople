There are many exceptions to processing, and it is difficult to create a program that takes them all into account. The try-except syntax allows the programmer to deal with errors when they occur, rather than defining all such exceptions. This method of implementing a small program and then implementing the program to deal with errors as they occur is similar to increment development.

I describe the errors I encountered during my study of this unit and how I handled them.

Example1:File open error
Occurs when an attempt is made to open a file that does not exist
code:
# example1
import os
print("example1")
try:
  print(os.path.exists("example1.txt"))
  fin1 = open("example1.txt","r") # Error because file does not exist
  print(fin1.split())
  fin1.close()
except:
  print("File does not exist.")

output
example1
False
File does not exist.

Example2:File write error
This occurs when writing cannot be performed.
code:
# example2 
print("example2")
try:
  fout2 = open("example2.txt", "r") # Error due to incorrect way to open file
  fout2.write("test2")
  fout2.close()
except:
  print("File cannot be opened.")
output:
example2
File cannot be opened.

Example3: Format error
This error occurs because the int type cannot be written directly.
code:
# example3
print("example3")
test1 = "start"
test2 = 1200
try:
  fout3 = open("example3.txt", "w")
  fout3.write(test1)
  fout3.write(test2) # Error because int cannot be written directly
  fout3.close()
except TypeError as E:
  print("No numeric values can be written to the file. Please format it.")
output:
example3
No numeric values can be written to the file. Please format it.

In addition, if the example errors occur during the development of a large project, the following actions should be taken.
- Example1/Example2: Clearly design the necessary conditions in the execution of the module. If you clearly define that this file in this directory is required for execution and that the output file is to be output in this directory, you can deal with the error.
- Example3: This error will be incorporated into the project's coding policy as soon as it occurs and has been addressed. Since many members participate in a project, there are rules to establish certain standards. By defining it as a rule, we can prevent other members from making the same error.