I have learned some very important basic Java matters in this CS1102 course and have acquired them as skills. I will pick up three of the things I learned and explain my understanding of them.
First, classes and objects. I explained the difference between classes and objects in the discussion forum as follows
I understand that the key difference between the two elements is that a class describes the structure itself, while an object indicates behavior or state.
I believe that this concept was very well understood during the implementation of the Quiz program: by defining structures that are used multiple times, such as T/F Question and Multi Question, as classes, and then generating them as objects, I can generate objects that have the same structure but different states. By defining multiple-use structures such as T/F Question and Multi Question as classes and generating them as objects, I can generate objects with the same structure but in different states. I believe that understanding this concept helped me to take my understanding of object-oriented programming to the next step.
Next, let's talk about inheritance. I believe the important concept of inheritance is that "similar elements can be defined together. For example, I can have a parent class called shape for a rectangle and a triangle, or a parent class called vehicle for a bicycle and a motorcycle. When I think about the behavior of an object, I can group objects that behave in the same way and implement them with only a few modifications to reduce the time and effort required. This is a very useful concept when a large number of people are working on a large project. Conversely, when a small group of people is working on a project, it may be possible to proceed more smoothly by creating new objects rather than considering object division, so it is necessary to think carefully about the degree to which real-world objects need to be divided according to the program implementation situation Therefore, it is necessary to consider how much real-world objects need to be divided depending on the program implementation situation.
Finally, let's talk about events, which are an element in GUI programs. In GUI programming, I need to know what kind of operations the user will perform and what kind of operations will be tolerated in response to the assumed operation. In CS1102, I implemented a simple window that allows the user to select a button and a paint tool, but this is the area in which I have the most difficulty. I would like to continue learning how to link user operations and program behavior as an independent study.