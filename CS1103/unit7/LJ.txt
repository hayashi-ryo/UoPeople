In this week's unit, I learned about the MVC model as new knowledge. Let me first explain my understanding of this content.
The MVC model is a concept to achieve a loosely coupled nature, which is an element required for good software, and to clarify the scope of responsibility and influence of multiple programmers. According to the text, it is described as follows

When the MVC pattern is applied to a component, the model consists of the data that represents the current state of the component. The view is simply the visual presentation of the component on the screen. And the controller is the aspect of the component that carries out actions in response to events generated by the user (or by other sources such as timers). The idea is to assign responsibility for the model, the view, and the controller to different objects. (Eck, D. J. 2022)

In a nutshell, it aims to separate the user interface from the instance state and connect them with a controller. Programming with this concept enables loosely coupled applications to be implemented with fewer bugs.
In this unit, I was aware of JavaFX, a GUI framework, but I also looked at some other frameworks.

1. Spring Framework
2. Play Framework
3. JSF(Java Server Faces)
4. SAStruts（Super Agile Struts）
5. Struts
6. Apache Wicket
7. Dropwizard
8. ZK
9. Ninja web framework
10. Spark Framework

Since each framework has its history and characteristics, it is important concept to adopt the framework that best suits the characteristics of the application you wish to realize. I have used Spring Framework for development with a large number of people and Struts for maintenance purposes of a very historical project.
Thus, since there are many frameworks available to realize the ideas that are devised to realize an application, it is important to make a choice based on the intended use and scale when implementing a new application. I also believe that it is necessary to dive into a new state of affairs without being overly concerned with frameworks.
In addition, in this unit, I implemented programs with more practical content than in previous units, and I feel that the Lab11 WebServer program was a typical example of this. The first step was to check the desired behavior in the form of a send/request and then to implement a simple server function that could obtain the results. In this, although the code provided as samples existed, it was difficult to realize how to connect them without a clear understanding of the functionality to be implemented. In particular, in the area of implementing the code for managing threads, I was unable to clarify the purpose of implementing the functionality, and there were areas where I felt at a loss. The series of processes of clarifying functions from the objective requirements, implementing specific functions, and conducting tests are very basic workflows, and I would like to learn them well.
Finally, the course will be completed with the next unit and final exam. To finish with a better grade, I will implement revenge on the matters learned in the units up to this point.


References
Eck, D. J. (2022). Introduction to Programming Using Java
Version 9.0, JavaFX Edition. Hobart and William Smith Colleges. https://math.hws.edu/javanotes/index.html