1. Assuming standard 1500 byte Ethernet max payloads:  how many IPv4 fragments will be needed to transfer 2000 bytes of user data with a single UDP send? And, how do the 2000 bytes get split over the frags?
Assuming an Ethernet maximum payload of 1500 bytes, two IPv4 fragments are required to transfer 2000 bytes of user data in a single UDP transmission: the UDP header occupies 8 bytes and the IPv4 header 20 bytes, so the first fragment contains 1472 bytes (1500-20-8) of user data and the remaining 528 bytes (2000-1472) are split into a second fragment.

2. Despite its conceptual elegance, RPC (Remote Procedure Call) has a few problems. Discuss any 3 of those in brief.
Three examples of problems with RPC are: a) Network latency: RPC calls are made over the network, which can cause latency and poor performance. b) Security risks: remote procedure calls can be subject to security attacks and require proper authentication and encryption. attacks, so proper authentication, and encryption are required. c) Difficulty in changing interfaces: if the server-side procedure is changed, the client-side interface also needs to be updated, which can cause compatibility issues.

3. Why is timestamping needed in real-time applications? This is in the context of Real-time Transport Protocol (RTP).
In real-time applications, it is important to know the exact time at which data packets are generated. This is necessary to guarantee the order of communication, compensate for jitter (variations in packet arrival times), and maintain synchronization; RTP uses timestamps to process data at the right time and in the right order when playing back media streams.

4. Why does UDP exist? Would it not have been enough to just let user processes send raw IP packets?
UDP exists because, unlike TCP and other reliable transport layer protocols, there is no overhead of setting up, maintaining, and terminating connections and a datagram-oriented lightweight protocol was needed. This simplicity makes it ideal for real-time applications (e.g. live video streaming or online gaming) where latency is critical. The reason why user processes use UDP as well as sending raw IP packets is to provide minimal message format and functionality (e.g. multiplexing/separation by port number) for end-to-end communication, allowing applications to build directly on top of the network layer. With raw IP packets alone, these features have to be implemented by the application itself, increasing development complexity.

5. Explain how QUIC eliminates a couple of RTTs usually needed at the start of a secure web connection.
QUIC employs several innovative techniques as a way of eliminating some of the round-trip delays (RTTs) normally required when initiating a secure web connection. First, QUIC reduces the number of RTTs required to initiate an encrypted connection by integrating TLS (Transport Layer Security) negotiation into the connection setup phase. This allows QUIC to negotiate security parameters during the initial handshake and establish the connection at the same time. Furthermore, QUIC supports a feature called '0-RTT reconnection', which allows the security context of a previously established connection to be re-used to immediately start a new session. This significantly reduces the time required to initiate a secure connection compared to traditional TCP+TLS-based connections.

Word-Count: 409