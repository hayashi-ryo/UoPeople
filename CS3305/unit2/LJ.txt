Summary of the Week
The goal of this week's learning was to understand how to access internet servers, understand client software, compile source code on the server side, and start and stop server software. We also compared server-side and client-side software and evaluated the pros and cons of the Apache server.

Personal Reflections
Through this week's activities, I found the process of building a web server environment from source code particularly meaningful. The compilation work required understanding the environment in advance, and having a deep understanding to run the server, which I found to be a useful skill for real projects. PHP code, in particular, was new to me, and I initially found it challenging, but as I practiced, I gradually became more familiar with it.
Additionally, I gained insight into how PHP is currently utilized globally. For example, PHP powers dynamic websites, content management systems like WordPress, and is used for back-end logic in millions of websites, demonstrating its ongoing critical role in web development. Understanding the widespread use of PHP has helped me recognize its value in server-side programming, which has further motivated me to improve my PHP skills.
I also had the opportunity to learn about the advantages and disadvantages of the Apache server. One important point is that Apache is open-source and lacks formal support. When problems arise, users must have the skills to solve them on their own and, in some cases, the ability to directly check and fix the source code is essential. Additionally, building a server from source code often leads to environment-related issues, and this process helps develop the skills needed to address such problems effectively. Through this experience, I realized the importance of being adaptable in dealing with environment-specific issues in real-world system development.

Topics Studied in Depth
What left the biggest impression on me this week was compiling source code and building a server. Instead of simply installing the software, I learned that compiling from the source allows for deeper understanding of the system, and enables more flexible configurations and customizations. This process not only involves creating a functioning server but also making fine adjustments to performance and functionality by choosing the appropriate options and libraries during compilation. This has deepened my skills in constructing an environment tailored to specific needs.
Additionally, compiling from source is not just a technical task but a process that requires a deep understanding of the entire system, including the underlying OS, hardware, and network configurations. Particularly in the case of Apache server setup, understanding the roles and dependencies of various modules and configuring them accurately is crucial. This allows for precise adjustments to performance and security, making it possible to simulate real-world operational environments more effectively, which I found highly appealing.
Moreover, the process of compiling from source itself provides a valuable opportunity to develop flexible thinking and problem-solving skills for handling errors and dependency issues. I encountered unexpected errors and environment-specific problems during compilation, and resolving them deepened my understanding of the system's internal structure. Each time I faced a problem, I investigated, identified the cause, and devised the best solution, which enhanced my problem-solving skills.
Furthermore, with regard to the Apache server, I learned the importance of leveraging the open-source nature of the software to customize it to suit individual needs. Apache offers a wide range of modules, and by selecting the necessary features and eliminating unnecessary ones, it is possible to build an efficient and secure server environment. This level of customization is impressive compared to other server software, and I found that being able to identify settings tailored to specific projects is a significant advantage.
In this way, I feel that this week allowed me to deepen my technical skills and understanding of system structures and configurations, beyond simply using software.

Future Challenges and Goals for Next Week
Moving forward, I will delve deeper into PHP programming, and I feel that I need to strengthen my understanding of this week's content as a foundation. In particular, the next unit will involve actual server-side programming, and I hope to build on this week's learning to enhance my practical skills. Additionally, by understanding the pros and cons of the Apache server, I plan to compare it with other server software next week, consider different use cases, and expand my range of options.

Word Count: 720